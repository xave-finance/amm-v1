/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";

import type { Storage } from "../Storage";

export class Storage__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Storage> {
    return super.deploy(overrides || {}) as Promise<Storage>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Storage {
    return super.attach(address) as Storage;
  }
  connect(signer: Signer): Storage__factory {
    return super.connect(signer) as Storage__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Storage {
    return new Contract(address, _abi, signerOrProvider) as Storage;
  }
}

const _abi = [
  {
    inputs: [],
    name: "curve",
    outputs: [
      {
        internalType: "int128",
        name: "alpha",
        type: "int128",
      },
      {
        internalType: "int128",
        name: "beta",
        type: "int128",
      },
      {
        internalType: "int128",
        name: "delta",
        type: "int128",
      },
      {
        internalType: "int128",
        name: "epsilon",
        type: "int128",
      },
      {
        internalType: "int128",
        name: "lambda",
        type: "int128",
      },
      {
        internalType: "uint256",
        name: "totalSupply",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "derivatives",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "emergency",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "frozen",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "numeraires",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "reserves",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526000600e60006101000a81548160ff0219169083151502179055506000600e60016101000a81548160ff0219169083151502179055506001600e60026101000a81548160ff02191690831515021790555034801561006157600080fd5b506103ef806100716000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80638da5cb5b1161005b5780638da5cb5b1461014a578063a8e9d5281461017e578063c0046e39146101d6578063caa6fea41461022e5761007d565b8063054f7d9c146100825780637165485d146100a25780638334278d146100f2575b600080fd5b61008a61024e565b60405180821515815260200191505060405180910390f35b6100aa610261565b6040518087600f0b815260200186600f0b815260200185600f0b815260200184600f0b815260200183600f0b8152602001828152602001965050505050505060405180910390f35b61011e6004803603602081101561010857600080fd5b81019080803590602001909291905050506102cc565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610152610308565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6101aa6004803603602081101561019457600080fd5b810190808035906020019092919050505061032e565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610202600480360360208110156101ec57600080fd5b810190808035906020019092919050505061036a565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6102366103a6565b60405180821515815260200191505060405180910390f35b600e60009054906101000a900460ff1681565b60008060000160009054906101000a9004600f0b908060000160109054906101000a9004600f0b908060010160009054906101000a9004600f0b908060010160109054906101000a9004600f0b908060020160009054906101000a9004600f0b908060070154905086565b600d81815481106102d957fe5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600c818154811061033b57fe5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600b818154811061037757fe5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600e60019054906101000a900460ff168156fea264697066735822122075a642b3c57dc7bedff355b86c88fea66fee99bba395ccdd26cc4befb25f9f7f64736f6c63430007030033";
