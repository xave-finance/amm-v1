/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";

import type { Storage } from "../Storage";

export class Storage__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides & { from?: string | Promise<string> }): Promise<Storage> {
    return super.deploy(overrides || {}) as Promise<Storage>;
  }
  getDeployTransaction(overrides?: Overrides & { from?: string | Promise<string> }): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Storage {
    return super.attach(address) as Storage;
  }
  connect(signer: Signer): Storage__factory {
    return super.connect(signer) as Storage__factory;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Storage {
    return new Contract(address, _abi, signerOrProvider) as Storage;
  }
}

const _abi = [
  {
    inputs: [],
    name: "curve",
    outputs: [
      {
        internalType: "int128",
        name: "alpha",
        type: "int128",
      },
      {
        internalType: "int128",
        name: "beta",
        type: "int128",
      },
      {
        internalType: "int128",
        name: "delta",
        type: "int128",
      },
      {
        internalType: "int128",
        name: "epsilon",
        type: "int128",
      },
      {
        internalType: "int128",
        name: "lambda",
        type: "int128",
      },
      {
        internalType: "uint256",
        name: "totalSupply",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "derivatives",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "frozen",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "numeraires",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "reserves",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526000600e60006101000a81548160ff0219169083151502179055506001600e60016101000a81548160ff02191690831515021790555034801561004657600080fd5b506103a1806100566000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c8063054f7d9c146100675780637165485d146100875780638334278d146100d75780638da5cb5b1461012f578063a8e9d52814610163578063c0046e39146101bb575b600080fd5b61006f610213565b60405180821515815260200191505060405180910390f35b61008f610226565b6040518087600f0b815260200186600f0b815260200185600f0b815260200184600f0b815260200183600f0b8152602001828152602001965050505050505060405180910390f35b610103600480360360208110156100ed57600080fd5b8101908080359060200190929190505050610291565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6101376102cd565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61018f6004803603602081101561017957600080fd5b81019080803590602001909291905050506102f3565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6101e7600480360360208110156101d157600080fd5b810190808035906020019092919050505061032f565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b600e60009054906101000a900460ff1681565b60008060000160009054906101000a9004600f0b908060000160109054906101000a9004600f0b908060010160009054906101000a9004600f0b908060010160109054906101000a9004600f0b908060020160009054906101000a9004600f0b908060070154905086565b600d818154811061029e57fe5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600c818154811061030057fe5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600b818154811061033c57fe5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff168156fea264697066735822122057579a0a3b8524e305c7a15d2e8c96d34a8ed1fdb3262737230f474696c9a10f64736f6c63430007030033";
